version: "3.2"

services:
    couch_db_1:
        image: couchdb:latest
        restart: always
        environment:
            - ERL_FLAGS="+A 8"
        volumes:
            - {{volume_path}}/couchdb/data:/opt/couchdb/data
            - {{volume_path}}/couchdb/local.d:/opt/couchdb/etc/local.d
            - {{volume_path}}/couchdb/vm.args:/opt/couchdb/etc/vm.args
        networks:
            default:
                aliases:
                  - {{node1_domain}}
        deploy:
            replicas: 1
            endpoint_mode: dnsrr
            placement:
                constraints: [node.hostname == server1]

    couch_db_2:
        image: couchdb:latest
        restart: always
        environment:
            - ERL_FLAGS="+A 8"
        volumes:
            - {{volume_path}}/couchdb/data:/opt/couchdb/data
            - {{volume_path}}/couchdb/local.d:/opt/couchdb/etc/local.d
            - {{volume_path}}/couchdb/vm.args:/opt/couchdb/etc/vm.args
        networks:
            default:
                aliases:
                  - {{node2_domain}}
        deploy:
            replicas: 1
            endpoint_mode: dnsrr
            placement:
                constraints: [node.hostname == server2]

    couch_db_3:
        image: couchdb:latest
        restart: always
        environment:
            - ERL_FLAGS="+A 8"
        volumes:
            - {{volume_path}}/couchdb/data:/opt/couchdb/data
            - {{volume_path}}/couchdb/local.d:/opt/couchdb/etc/local.d
            - {{volume_path}}/couchdb/vm.args:/opt/couchdb/etc/vm.args
        networks:
            default:
                aliases:
                  - {{node3_domain}}
        deploy:
            replicas: 1
            endpoint_mode: dnsrr 
            placement:
                constraints: [node.hostname == server3]


    couch_db_4:
        image: couchdb:latest
        restart: always
        environment:
            - ERL_FLAGS="+A 8"
        volumes:
            - {{volume_path}}/couchdb/data:/opt/couchdb/data
            - {{volume_path}}/couchdb/local.d:/opt/couchdb/etc/local.d
            - {{volume_path}}/couchdb/vm.args:/opt/couchdb/etc/vm.args
        networks:
            default:
                aliases:
                  - {{node4_domain}}
        deploy:
            replicas: 1
            endpoint_mode: dnsrr 
            placement:
                constraints: [node.hostname == server4]

    curl_service:
        image: byrnedo/alpine-curl
        volumes:
            - {{script_folder}}:{{script_folder}}
        entrypoint: ["sh", "-c", "{{script_folder}}/setup.sh" ]
        deploy:
            placement:
                constraints: [node.hostname == server1]


    history_harvester:
        image: harvester
        restart: on-failure
        environment:
            - pyscript=HistoryCrawler.py
            - dbip=172.17.0.1:5984
            - http_proxy={{http_proxy}}
            - https_proxy={{http_proxy}}
            - no_proxy={{no_proxy}}
        deploy:
            resources:
                limits:
                    memory: 1000M
    
    stream_harvester:
        image: harvester
        restart: on-failure
        environment:
            - pyscript=StreamToCouchDB.py
            - dbip=172.17.0.1:5984
            - http_proxy={{http_proxy}}
            - https_proxy={{http_proxy}}
            - no_proxy={{no_proxy}}

    backup_db:
        image: couchdb:latest
        environment:
            - COUCHDB_USER={{couch_usr}}
            - COUCHDB_PASSWORD={{couch_pwd}}
            - ERL_FLAGS="+A 8"
        volumes:
            - /{{backup_path}}/data:/opt/couchdb/data
            - /{{backup_path}}/local.d:/opt/couchdb/etc/local.d
        networks:
            default:
                aliases:
                  - {{backup_domain}}
        deploy:
            replicas: 1
            placement:
                constraints: [node.hostname == server1]

    haproxy:
        image: haproxy:1.7-alpine
        ports:
          - published: 80
            target: 80
          - published: 5984
            target: 5984
        depends_on:
            - couch_db_1
            - couch_db_2
            - couch_db_3
            - couch_db_4
        volumes:
            - "{{volume_path}}/haproxy:/usr/local/etc/haproxy:ro"
        deploy:
            replicas: 2

    nginx:
        image: nginx:alpine
        ports:
          - "8080:80"
        volumes:
          - "{{code_path}}/frontend/app/build:/usr/share/nginx/html:ro"
        deploy:
          replicas: 4


networks:
  default:
    external:
      name: {{couchdb_docker_network}}